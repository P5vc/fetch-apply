#!/usr/bin/env bash

set -euo pipefail


RED="\033[0;31m"
YELLOW="\033[0;33m"
GREEN="\033[0;32m"
BLUE="\033[0;34m"
CYAN="\033[0;36m"
PURPLE="\033[0;35m"
NO_COLOR="\033[0m"


function install()
{
	FA_GIT_URL="https://github.com/P5vc/FetchApply.git"
	CRONTAB_ENTRY="$(( RANDOM % 60 )) $(( RANDOM % 24 )) * * *"

	echo -e "Welcome to the Fetch Apply installation script.\n\nPlease answer the following questions about how you would like to\ninstall Fetch Apply. If you are not sure what to put, press enter,\nand the default value in parentheses will be applied."

	echo -e "\n\n${BLUE}Where would you like to install Fetch Apply?\n${CYAN}Installation Path (/var/lib):${NO_COLOR}"
	read INSTALLATION_PATH
	if [ -z "$INSTALLATION_PATH" ]
	then
		INSTALLATION_PATH="/var/lib"
	fi

	if [ -e "${INSTALLATION_PATH}/fetchapply" ]
	then
		echo -e "${RED}Error. An existing Fetch Apply installation was found.${NO_COLOR}"

		echo -e "\n${BLUE}Would you like to reinstall/upgrade Fetch Apply?\nThe entire, current installation will be removed, and all\npreferences, settings, operations, etc. will be lost.\n${CYAN}Reinstall/Upgrade Fetch Apply (yes):${NO_COLOR}"
		read UPGRADE_FETCH_APPLY
		if [ -z "$UPGRADE_FETCH_APPLY" ]
		then
			UPGRADE_FETCH_APPLY="yes"
		fi

		if [ "$UPGRADE_FETCH_APPLY" == "yes" ]
		then
			rm -rf /var/lib/fetchapply
			echo -e "\n${GREEN}The old Fetch Apply installation was successfully removed.${NO_COLOR}"
		else
			echo -e "\n${RED}Leaving the old Fetch Apply installation intact. Exiting...${NO_COLOR}"
			exit 1
		fi
	fi

	echo -e "\n\n${BLUE}Where would you like to create a log file?\n${CYAN}Log file (/var/log/fetchapply.log):${NO_COLOR}"
	read LOG_FILE_PATH
	if [ -z "$LOG_FILE_PATH" ]
	then
		LOG_FILE_PATH="/var/log/fetchapply.log"
	fi

	echo -e "\n\n${BLUE}What is your operations git URL?\n${CYAN}URL (https://github.com/P5vc/ServerConfigurations.git):${NO_COLOR}"
	read OPERATIONS_GIT_URL
	if [ -z "$OPERATIONS_GIT_URL" ]
	then
		OPERATIONS_GIT_URL="https://github.com/P5vc/ServerConfigurations.git"
	fi

	echo -e "\n\n${BLUE}What is the desired hostname for this server?\n${CYAN}Hostname (server):${NO_COLOR}"
	read SERVER_HOSTNAME
	if [ -z "$SERVER_HOSTNAME" ]
	then
		SERVER_HOSTNAME="server"
	fi

	echo -e "\n\n${BLUE}What is the desired Fetch Apply run frequency? The default is once every 24 hours.\n${CYAN}Run frequency in crontab syntax (${CRONTAB_ENTRY}):${NO_COLOR}"
	read THEIR_CRONTAB_ENTRY
	if [ -n "$THEIR_CRONTAB_ENTRY" ]
	then
		CRONTAB_ENTRY=$"THEIR_CRONTAB_ENTRY"
	fi

	if [ -z "$(/usr/bin/which git)" ]
	then
		echo -e "\n\n${YELLOW}Warning: git was not detected.\nAttempting to install git...${PURPLE}"
		apt-get update
		apt-get install git -y
		echo -e "${NO_COLOR}"
	else
		echo -e "\n\n${GREEN}Git detected...${NO_COLOR}"
	fi

	echo -e "\n\n${GREEN}Beginning installation...${PURPLE}"

	hostnamectl set-hostname $SERVER_HOSTNAME

	mkdir -p ${INSTALLATION_PATH}/fetchapply
	git clone $FA_GIT_URL ${INSTALLATION_PATH}/fetchapply
	ln -sf ${INSTALLATION_PATH}/fetchapply/fa /usr/bin/fa

	git clone $OPERATIONS_GIT_URL ${INSTALLATION_PATH}/fetchapply/operations

	echo -e "# Fetch Apply Configuration File\n\n# This file contains global variables used within\n# Fetch Apply to modify certain, standard behaviors.\n\n# All possible options, along with their default values,\n# are listed within this file.\n\n# Please refrain from removing/renaming any of these variables,\n# and maintain proper, Bash syntax at all times.\n\n" > /etc/fetchapply

	echo -e "# Fetch Apply installation location:\nfa_var_FA_ROOT=${INSTALLATION_PATH}/fetchapply\n" >> /etc/fetchapply
	echo -e "# Fetch Apply log file path:\nfa_var_LOG_FILE_PATH=${LOG_FILE_PATH}\n" >> /etc/fetchapply
	echo -e "# Fetch Apply maximum log file size (in lines):\nfa_var_MAX_LOG_LENGTH=10000\n" >> /etc/fetchapply
	echo -e "# Ignore run locks due to errors (but still honor pause locks):\nfa_var_IGNORE_RUN_LOCKS=false" >> /etc/fetchapply


	echo -e "SHELL=/bin/sh\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n${CRONTAB_ENTRY} root ${INSTALLATION_PATH}/fetchapply/fa 2>&1" > /etc/cron.d/fa

	echo -e "\n\n${GREEN}Installation complete.${NO_COLOR}"
}

install
